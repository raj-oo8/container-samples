name: Deploy to Azure Container Apps

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install azd
        uses: Azure/setup-azd@v1.0.0

      - name: Install .NET Aspire workload
        run: dotnet workload install aspire

      #- name: Log in with Azure (Federated Credentials)
      #  if: ${{ env.AZURE_CLIENT_ID != '' }}
      #  run: |
      #    azd auth login `
      #      --client-id "$Env:AZURE_CLIENT_ID" `
      #      --federated-credential-provider "github" `
      #      --tenant-id "$Env:AZURE_TENANT_ID"
      #  shell: pwsh

      - name: Log in with Azure (Client Credentials)
        if: ${{ env.AZURE_CREDENTIALS != '' }}
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
          Write-Host "::add-mask::$($info.clientSecret)"

          azd auth login `
            --client-id "$($info.clientId)" `
            --client-secret "$($info.clientSecret)" `
            --tenant-id "$($info.tenantId)"
        shell: pwsh

      #- name: Set Azure subscription
      #  run: az account set --subscription ${{ env.AZURE_SUBSCRIPTION_ID }}
      #  shell: pwsh

      - name: Provision Infrastructure
        run: azd provision --environment ${{ env.AZURE_ENV_NAME }} --location ${{ env.AZURE_LOCATION }} --no-prompt

      - name: Deploy Application
        run: azd deploy --environment ${{ env.AZURE_ENV_NAME }} --location ${{ env.AZURE_LOCATION }} --no-prompt