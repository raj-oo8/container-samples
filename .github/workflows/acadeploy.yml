name: Deploy Aspire to ACA

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest
    env:
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      ACA_APP_NAME: 'webfrontend'
      ACA_RESOURCE_GROUP: 'rg-${{ vars.AZURE_ENV_NAME }}'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install .NET SDK 9.0.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install azd
        uses: Azure/setup-azd@v2

      - name: Install .NET Aspire workload
        run: dotnet workload install aspire

      - name: Log in with Azure (Client Credentials)
        if: ${{ env.AZURE_CREDENTIALS != '' }}
        run: |
          $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
          Write-Host "::add-mask::$($info.clientSecret)"

          azd auth login `
            --client-id "$($info.clientId)" `
            --client-secret "$($info.clientSecret)" `
            --tenant-id "$($info.tenantId)"
        shell: pwsh

      - name: Set Subscription ID and Location
        working-directory: ./src/Aspire/Aspire.AppHost
        run: |
          azd config set defaults.subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          azd config set defaults.location ${{ vars.AZURE_LOCATION }}

      - name: Provision Infrastructure
        working-directory: ./src/Aspire/Aspire.AppHost
        run: azd provision --environment ${{ vars.AZURE_ENV_NAME }} --no-prompt

      - name: Deploy Application
        working-directory: ./src/Aspire/Aspire.AppHost
        run: azd deploy --environment ${{ vars.AZURE_ENV_NAME }} --all --no-prompt

      # Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set ACA Secret from GitHub Secret
        run: |
          az containerapp secret set \
            --name ${{ env.ACA_APP_NAME }} \
            --resource-group ${{ env.ACA_RESOURCE_GROUP }} \
            --secrets azuread-clientsecret=${{ secrets.AZUREAD_CLIENT_SECRET }}

      - name: Map ACA Secret to Environment Variable
        run: |
          az containerapp update \
            --name ${{ env.ACA_APP_NAME }} \
            --resource-group ${{ env.ACA_RESOURCE_GROUP }} \
            --set-env-vars AzureAd__ClientSecret=secretref:azuread-clientsecret

      - name: Get webfrontend App URL
        id: get_app_url
        run: |
          fqdn=$(az containerapp show \
            --name ${{ env.ACA_APP_NAME }} \
            --resource-group ${{ env.ACA_RESOURCE_GROUP }} \
            --query properties.configuration.ingress.fqdn \
            -o tsv)
          echo "fqdn=$fqdn" >> $GITHUB_OUTPUT

      - name: Add App URL to Entra ID App Registration Redirect URIs
        run: |
          fqdn="${{ steps.get_app_url.outputs.fqdn }}"
          redirect_uri="https://$fqdn/signin-oidc"
          az ad app update \
            --id ${{ secrets.AZUREAD_APP_ID }} \
            --add web.redirectUris $redirect_uri